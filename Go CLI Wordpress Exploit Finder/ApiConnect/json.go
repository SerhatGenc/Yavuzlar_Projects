package apiconnect

import (
	"encoding/json"
	"fmt"
	"os"
	"time"
)

type Jason struct {
	ReleaseDate     string `json:"release_date"`
	ChangelogURL    string `json:"changelog_url"`
	Status          string `json:"status"`
	Vulnerabilities []struct {
		ID            string      `json:"id"`
		Title         string      `json:"title"`
		CreatedAt     time.Time   `json:"created_at"`
		UpdatedAt     time.Time   `json:"updated_at"`
		PublishedDate time.Time   `json:"published_date"`
		Description   interface{} `json:"description"`
		Poc           interface{} `json:"poc"`
		VulnType      string      `json:"vuln_type"`
		References    struct {
			URL        []string `json:"url"`
			Cve        []string `json:"cve"`
			Exploitdb  []string `json:"exploitdb"`
			Metasploit []string `json:"metasploit"`
		} `json:"references"`
		Cvss         interface{} `json:"cvss"`
		Verified     bool        `json:"verified"`
		FixedIn      string      `json:"fixed_in"`
		IntroducedIn interface{} `json:"introduced_in"`
	} `json:"vulnerabilities"`
}

func MakeJson(rawJson string) Jason {

	var data Jason
	err := json.Unmarshal([]byte(rawJson), &data)
	if err != nil {
		fmt.Println("JSON unmarshall error :", err)
		os.Exit(1)
	}
	return data
}
